@layer defaults {
	.compact .icon {
		shape-rendering: crispEdges;
	}

	.compact svg.icon.dull {
		shape-rendering: auto;
	}

	.compact .active > svg.icon:is(.anesidora-thumbs-up, .anesidora-thumbs-down, .anesidora-sleep) .check {
		display: block;
	}

	.compact input[type="range"] {
		border-radius: 4px;
		accent-color: var(--icon-default-stroke);
		border: solid 1px var(--icon-default-stroke);
		appearance: none;
		overflow: hidden;
		overflow: clip;
	}
		/*
			For future reference, styling cross-browser range inputs is utterly cursed.

			`background: transparent` only works if `appearance: none` is set, and
			there's *no* equivalent to ::-moz-range-progress in webkit so I just have to set
			a gigantic box shadow on the thumb. what??

			Also, there's a different way of making a vertical input for every engine.
			I gave up and just used a wrapped transform. Because of course.
		*/
		.compact input[type="range"]:focus-visible {
			outline: solid 1px var(--icon-active-stroke);
		}
		.compact input[type="range"]::-moz-range-track {
			background: transparent;
		}
		.compact input[type="range"]::-webkit-slider-runnable-track {
			background: transparent;
		}
		.compact input[type="range"]::-moz-range-progress {
			height: 100%;
			background: var(--icon-default-stroke);
		}
		.compact input[type="range"]::-moz-range-thumb {
			height: 100%;
			border: none;
			background-color: var(--icon-default-stroke);
		}
		.compact input[type="range"]::-webkit-slider-thumb {
			height: 100%;
			border: none;
			background-color: var(--icon-default-stroke);
			box-shadow: -500px 0 0 500px var(--icon-default-stroke);
		}

	#anesidora, .restOfPreview.compact {
		position: relative;

		background: var(--background-color);
		color: var(--text-color);
		font-family: var(--font-family);
		font-optical-sizing: auto;

		display: flex;
		flex-flow: row nowrap;
		align-items: stretch;

		overflow: hidden;
		overflow: clip;

		color-scheme: var(--color-scheme-type);
	}
		.compact > :not(.background-blur) {
			z-index: 2;
		}
		.compact > .skipnav {
			padding: 0.375rem; /* 6px */
			position: fixed;
			top: -100%;
			left: 0;
			background: var(--tab-navigation-background-color);
			color: var(--tab-navigation-text-color);
			border-right: 1px solid  var(--tab-navigation-text-color);
			border-bottom: 1px solid  var(--tab-navigation-text-color);
			border-bottom-right-radius: 0.5rem /* 8px */;
			transition: top 250ms ease-in-out;
			z-index: 100;
		}
		.compact > .skipnav:focus {
			top: 0;
		}
		.compact > .navigation-button {
			align-self: center;
			cursor: pointer;
			display: none;

			margin: 8px;

			color: var(--tab-navigation-text-color);
		}
		.compact > .navigation-button.visible {
			display: block;
		}
		.compact > .navigation-button.visible:hover {
			color: var(--icon-hover-stroke);
		}
			.compact > .navigation-button > .icon {
				/*
					Removes vertical-align spacing by making this block instead of inline-block
					(`line-spacing` and `vertical-align` affect inline (and inline-block) elements, because inline is text.)
					(in documents, this makes sense. this is not a document. this is an app.)
				*/
				display: block;

				height: var(--tab-navigation-icon-size);
				border: solid 1px currentColor;
				border-radius: 5px;
				shape-rendering: crispEdges;

				background-color: var(--tab-navigation-background-color);
			}



		.compact > .background-blur {
			display: block;

			position: absolute;

			--blur-amount: var(--album-background-blur-size, calc(0.15 * var(--viewport-width)));

			inset: calc(var(--blur-amount) * -1);
			width: calc(var(--viewport-width) + (2 * var(--blur-amount)));
			height: calc(var(--viewport-height) + (2 * var(--blur-amount)));
			filter: blur(var(--blur-amount)) saturate(var(--album-background-saturation, 4));

			object-fit: cover;
			object-position: center;
			opacity: 0;
			pointer-events: none;
		}

		.compact > .background-blur.loaded {
			transition: opacity 150ms;
			opacity: var(--album-background-strength);
		}


		.compact > main {
			display: flex;
			flex-flow: row nowrap;
			flex-grow: 1;
			width: 0;
			align-items: stretch;
			justify-content: stretch;
		}
		.compact > main > section {
			display: flex;
			flex-flow: column nowrap;

			width: 0;
			flex-grow: 1;
			max-height: 100%;
		}
		.compact > main > section[inert] {
			/*
				lol. lmao, even.

				still, this keeps the appearance of the compact player the same as pre-rework,
				even if it makes adding inert and aria-hidden entirely redundant
			*/
			display: none;
		}
			.compact > main > .history {
				overflow-y: auto;
				overflow-x: clip;
			}
			/* #region section.history */
				.compact > main > .history > ul {
					display: flex;
					flex-flow: column nowrap;
					align-items: stretch;
					justify-content: start;
				}
					.compact > main > .history > ul > .history-item {
						display: flex;
						flex-flow: row nowrap;
						align-items: center;
						justify-content: start;

						width: 100%;
						padding: 0.3125rem 0.625rem; /* 5px 10px */
						gap: 0.5rem; /* 8px */
					}
					.compact > main > .history > ul > .history-item:nth-child(2n) {
						background-color: var(--alternating-row-background);
					}
						.compact > main > .history > ul > .history-item > .cover {
							width: 15px;
							height: 15px;
							flex-shrink: 0;
						}
						.compact > main > .history > ul > .history-item > .title {
							white-space: nowrap;
							overflow: hidden;
							text-overflow: ellipsis;

							font-weight: 500;
							font-size: 1rem;
							line-height: 125%;

							color: inherit;
						}
						.compact > main > .history > ul > .history-item > .action {
							cursor: pointer;
						}
							.compact > main > .history > ul > .history-item > button > .icon {
								display: block;
								height: var(--history-icon-size);
								color: var(--icon-default-stroke);

								width: unset;

								border: solid 1px currentColor;
								border-radius: 5px;

								background-color: var(--icon-default-fill);
							}
							.compact > main > .history > ul > .history-item > button:hover > .icon {
								color: var(--icon-hover-stroke);
								background-color: var(--icon-hover-fill);
							}
							.compact > main > .history > ul > .history-item > button.active:not(.thumbs-up, .sleep, .thumbs-down) > .icon {
								color: var(--icon-active-stroke);
								background-color: var(--icon-active-fill);
							}
								.compact > main > .history > ul > .history-item > button.active > .icon > .check {
									display: block;
								}
			/* #endregion section.history */

			.compact > main > .player {
				flex-flow: row nowrap;
				align-items: center;

				overflow: hidden;
				overflow: clip;

				position: relative;

				gap: 1rem;
			}
			/* #region section.player */
				.compact > main > .player > .cover {
					width: 0;
					flex-grow: 20;
					max-width: var(--player-cover-max-size);
					border-radius: var(--player-cover-corner-radius, 0);

					border: 1px solid var(--icon-default-stroke);
				}

				.compact > main > .player > .valign {
					display: flex;
					flex-flow: column nowrap;
					align-items: start;
					justify-content: center;

					flex-grow: 1;

					gap: 8px;

					height: max(var(--player-cover-max-size), 80%);
					padding: 0 4px;

					max-width: calc(100% - 8px);
				}
					.compact > main > .player > .valign > .infoline {
						display: block;
						overflow: hidden;
						width: 100%;
						height: 1.2rem;
						position: relative;
						--infoline-scroll-amount: 0;
						--infoline-scroll-duration: 5s;
					}
					.compact > main > .player > .valign > .infoline:focus-visible {
						outline: solid 2px var(--icon-active-stroke);
						border-radius: 4px;
					}
						.compact > main > .player > .valign > .infoline > .infoline-content {
							display: block;
							width: max-content;
							white-space: nowrap;

							position: absolute;
							top: 0;
							left: 0;
						}
						.compact > main > .player > .valign > .infoline > .infoline-content:hover {
							transform: translateX(var(--infoline-scroll-amount));
							transition: transform var(--infoline-scroll-duration) linear;
						}
							.compact > main > .player > .valign > .infoline > .infoline-content > a {
								color: inherit;
								text-decoration: inherit;
							}
							.compact > main > .player > .valign > .infoline > .infoline-content > a:is(:focus, :hover) {
								text-decoration: underline;
							}

					.compact > main > .player > .valign > .seekBar {
						height: 6px;
						width: 100%;
					}

					.compact > main > .player > .valign > .actions {
						width: 100%;
						display: flex;
						flex-flow: row nowrap;
						align-items: center;
						justify-content: start;

						gap: 4px;
					}
						.compact > main > .player > .valign > .actions > .action {
							cursor: pointer;
						}
							.compact > main > .player > .valign > .actions > .action > svg {
								display: block;
								height: var(--player-icon-size);
								color: var(--player-main-icons-stroke);

								width: unset;

								border: solid 1px currentColor;
								border-radius: 3px;

								background-color: var(--player-main-icons-fill);
							}
							.compact > main > .player > .valign > .actions > .action.big > svg {
								height: var(--player-main-icon-size);
								color: var(--player-play-icon-stroke);
								background-color: var(--player-play-icon-fill);
							}
							.compact > main > .player > .valign > .actions > .action:hover > svg {
								color: var(--icon-hover-stroke);
								background-color: var(--icon-hover-fill);
							}
							.compact > main > .player > .valign > .actions > .action.big:hover > svg {
								color: var(--icon-hover-stroke);
								background-color: var(--icon-hover-fill);
							}
							.compact > main > .player > .valign > .actions > .action.active:not(.thumbs-up, .thumbs-down, .sleep) > svg {
								color: var(--icon-active-stroke);
								background-color: var(--icon-active-fill);
							}

				.compact > main > .player > .volumewrap {
					width: 6px;
					height: calc(var(--viewport-height) * 0.7);
					position: relative;
				}
					.compact > main > .player > .volumewrap > .volume {
						width: calc(var(--viewport-height) * 0.7);
						height: 6px;
						transform: rotate(90deg);
						transform-origin: top left;
						direction: rtl;
						position: absolute;
						top: 0;
						left: 0;
					}
					.compact > main > .player > .volumewrap > .volume::-webkit-slider-thumb {
					box-shadow: 500px 0 0 500px var(--icon-default-stroke);
					}
			/* #endregion section.player */

			.compact > main > .stations {
				display: flex;
				flex-flow: column nowrap;

				gap: 0.5rem;
				padding: 0.5rem 0;
			}
				.compact > main > .stations > .search {
					display: flex;
					flex-flow: row nowrap;
					width: 100%;
					gap: 0.5rem;
				}
					.compact > main > .stations > .search > .stations-search {
						flex-grow: 1;
						padding: 0.2rem 0.3rem;

						border: solid 1px var(--icon-default-stroke);
						background: var(--icon-default-fill);

						height: 2rem;
					}
					.compact > main > .stations > .search > .refresh {
						cursor: pointer;
					}
						.compact > main > .stations > .search > .refresh:is(:hover, :focus-within) > .icon {
							color: var(--icon-hover-stroke);
							background-color: var(--icon-hover-fill);
						}
						.compact > main > .stations > .search > .refresh:is(.active, :active) > .icon {
							color: var(--icon-active-stroke);
							background-color: var(--icon-active-fill);
						}
						.compact > main > .stations > .search > .refresh > .icon {
							display: block;

							height: 2rem;
							width: unset;

							color: var(--icon-default-stroke);
							background-color: var(--icon-default-fill);

							border: solid 1px currentColor;
							border-radius: 5px;

							shape-rendering: auto;
						}
				.compact > main > .stations > .stationsList {
					border: 1px solid var(--icon-default-stroke);

					border-radius: 5px;
					background: var(--icon-default-fill);

					height: 0;
					flex-grow: 1;

					overflow-y: auto;
				}
					.compact > main > .stations > .stationsList > .station {
						text-align: left;
						padding: 0.2rem 0.3rem;
						display: block;
						width: 100%;

						cursor: default;
					}
					.compact > main > .stations > .stationsList > .station:is(.active, :active, :focus) {
						color: var(--stations-active-station-color);
						background: var(--stations-active-station-background);
					}
			/* #endregion section.stations */

			.compact > main > .account {
				display: flex;
				flex-flow: column nowrap;
				align-items: start;

				padding: 1rem;
			}
				/* #region section.account */
				.compact > main > .account.logged-out > ul {
					display: flex;
					flex-flow: row;
					width: 100%;
					justify-content: space-between;
				}
					.compact > main > .account > ul > li {
						display: block;
						font-size: 1.3rem;
					}

					.compact > main > .account > ul > li.anesidora {
						font-weight: 700;
					}

					.compact > main > .account > ul > li.links {
						display: flex;
						flex-flow: row nowrap;
						align-items: center;
						gap: 0.3rem;
					}
						.compact > main > .account > ul > li.links > .separator {
							display: inline-block;
							width: 0.4ch;
							height: 0.4ch;
							background-color: currentColor;
							opacity: 0.5;
							border-radius: 100%;
						}

						.compact > main > .account > ul > li.links > a {
							text-decoration: underline;
							color: inherit;
						}
				.compact > main > .account > .real-account {
					display: block;
				}
					.compact > main > .account > .real-account > .username {
						font-weight: 600;
					}
					.compact > main > .account > .real-account > .logout-button {
						display: flex;
						flex-flow: row nowrap;
						gap: 0.5rem;
						align-items: center;
						font-size: 1.3rem;

						padding: 0.2rem 0.5rem;
						cursor: pointer;
						background-color: var(--icon-default-fill);
						border: solid 1px var(--icon-default-stroke);
						border-radius: 4px;

						margin-top: 0.5rem;
					}
						.compact > main > .account > .real-account > .logout-button > .icon {
							height: 1.3rem;
							fill: none;
							stroke: currentColor;
							stroke-width: 2px;
							shape-rendering: auto;
						}

					.compact > main > .account > .login > .halign {
						display: flex;
						flex-flow: row nowrap;
						gap: 1rem;
					}
						.compact > main > .account > .login > .halign > .inputgroup {
							display: flex;
							flex-flow: column nowrap;
						}
							.compact > main > .account > .login > .halign > .inputgroup > input {
								padding: 0.2rem 0.4rem;
								border: solid 1px var(--icon-default-stroke);
								border-radius: 2px;
							}
							.compact > main > .account > .login > .halign > .inputgroup > label {
								font-size: 1.1rem;
							}
						.compact > main > .account > .login > .buttonsgroup > * {
							display: inline-block;
							padding: 0.2rem 0.5rem;
							background: var(--icon-default-fill);
							border: solid 1px var(--icon-default-stroke);
							border-radius: 4px;
							color: inherit;
							text-decoration: none;
							cursor: pointer;
						}
}